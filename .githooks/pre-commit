#!/bin/bash
set -e

echo "🔍 Running pre-commit checks..."

# Check if we're in the right directory
if [ ! -f "backend/go.mod" ]; then
  echo "❌ Not in project root directory"
  exit 1
fi

# Function to check if command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Check Go backend
echo "🔧 Checking Go backend..."
if command_exists go; then
  cd backend
  
  # Check Go modules
  echo "  📦 Verifying Go modules..."
  go mod verify || {
    echo "❌ Go modules verification failed"
    exit 1
  }
  
  # Check for Go syntax/compile errors
  echo "  🏗️ Building Go backend..."
  go build -o /tmp/sermon-uploader . || {
    echo "❌ Go build failed"
    exit 1
  }
  
  # Run Go vet (catches common errors)
  echo "  🔎 Running go vet..."
  go vet ./... || {
    echo "❌ Go vet found issues"
    exit 1
  }
  
  # Check Go formatting
  echo "  📐 Checking Go formatting..."
  UNFORMATTED=$(gofmt -l .)
  if [ -n "$UNFORMATTED" ]; then
    echo "❌ Go files need formatting:"
    echo "$UNFORMATTED"
    echo "Run: gofmt -w ."
    exit 1
  fi
  
  cd ..
  echo "✅ Go backend checks passed"
else
  echo "⚠️ Go not found, skipping Go checks"
fi

# Check Frontend (lightweight check)
echo "🎨 Checking Frontend..."
if command_exists npm && [ -f "frontend/package.json" ]; then
  cd frontend
  
  # Check if node_modules exists
  if [ ! -d "node_modules" ]; then
    echo "  ⚠️ node_modules not found, skipping frontend checks"
    echo "  💡 Run 'npm ci' to install dependencies"
  else
    # TypeScript compile check (quick)
    echo "  🔷 Checking TypeScript compilation..."
    npx tsc --noEmit --skipLibCheck || {
      echo "❌ TypeScript compilation failed"
      exit 1
    }
  fi
  
  cd ..
  echo "✅ Frontend checks passed"
else
  echo "⚠️ npm not found or no package.json, skipping frontend checks"
fi

echo "🎉 All pre-commit checks passed! Safe to commit."