#!/bin/bash
# Simplified pre-push hook - TDD approach
# Only check critical things that would break deployment

set -e

echo "üõ°Ô∏è Running pre-push validation..."

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

FAILED=0

# 1. Check Go builds (most critical)
if [ -d "backend" ]; then
    echo "üîß Checking Go build..."
    (cd backend && go build -o /tmp/test-build ./... 2>/dev/null)
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Go build successful${NC}"
        rm -f /tmp/test-build
    else
        echo -e "${RED}‚ùå Go build failed${NC}"
        FAILED=1
    fi
fi

# 2. Check Docker builds
if [ -f "Dockerfile" ]; then
    echo "üê≥ Checking Dockerfile syntax..."
    if docker build --no-cache -t pre-push-test:latest . --dry-run 2>/dev/null || docker build -t pre-push-test:latest . >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Docker build successful${NC}"
        docker rmi pre-push-test:latest 2>/dev/null || true
    else
        echo -e "${RED}‚ùå Docker build failed${NC}"
        FAILED=1
    fi
fi

# 3. Check for obvious secrets (simplified)
echo "üîë Checking for secrets..."
if ! grep -r "John 3:16" --include="*.go" --include="*.js" --include="*.ts" --exclude-dir=".git" --exclude="*.test.*" --exclude="*.md" . 2>/dev/null | grep -v "config.go" | grep -v "config_test.go" | grep -q .; then
    echo -e "${GREEN}‚úÖ No hardcoded secrets found${NC}"
else
    echo -e "${RED}‚ùå Hardcoded credentials detected${NC}"
    FAILED=1
fi

if [ $FAILED -eq 1 ]; then
    echo -e "${RED}Push blocked - fix issues above${NC}"
    exit 1
else
    echo -e "${GREEN}‚úÖ All checks passed!${NC}"
    exit 0
fi