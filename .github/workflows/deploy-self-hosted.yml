name: Deploy to Pi (Self-Hosted Runner)

on:
  push:
    branches: [master, main]
  workflow_dispatch:
  
# This is now your MAIN deployment workflow

jobs:
  # Test phase runs on GitHub's infrastructure
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true
          cache-dependency-path: backend/go.sum
      
      - name: Build backend
        working-directory: ./backend
        run: |
          echo "📦 Installing dependencies..."
          go mod download
          
          echo "🔨 Building backend to check for compilation errors..."
          go build -v -o sermon-backend main.go
          echo "✅ Build successful!"
          
          # Show binary info
          ls -lh sermon-backend
          file sermon-backend
          
      - name: Run backend tests
        working-directory: ./backend
        run: |
          echo "🧪 Running tests (excluding integration)..."
          go test $(go list ./... | grep -v /integration) -v -race -short
          echo "✅ All tests passed!"
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: sermon-backend-${{ github.sha }}
          path: backend/sermon-backend
          retention-days: 1

  # Deploy phase runs on YOUR Raspberry Pi!
  deploy:
    needs: test  # Only deploy if tests pass
    runs-on: self-hosted  # This runs on your Pi!
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to local Pi
        run: |
          echo "🚀 Deploying on Raspberry Pi (self-hosted runner)"
          echo "Current directory: $(pwd)"
          echo "Hostname: $(hostname)"
          
          # We're already on the Pi, so just deploy locally!
          cd /home/gaius/sermon-uploader
          
          # Pull latest code
          git pull origin master
          
          # Run deployment
          if [ -f deploy-from-pi.sh ]; then
            chmod +x deploy-from-pi.sh
            ./deploy-from-pi.sh
            # Script exit code determines success
          else
            echo "❌ deploy-from-pi.sh not found!"
            exit 1
          fi
          
      - name: Post-deployment summary
        run: |
          echo "## 🎉 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Deployed to: $(hostname) at $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Service URLs:" >> $GITHUB_STEP_SUMMARY
          echo "- Backend: http://192.168.1.127:8000" >> $GITHUB_STEP_SUMMARY
          echo "- MinIO: http://192.168.1.127:9000" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test the deployment:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'curl http://192.168.1.127:8000/api/health' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY