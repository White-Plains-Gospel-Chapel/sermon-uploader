name: Deploy on Pi (self-hosted)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  deploy:
    runs-on: [self-hosted, pi]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure Docker network and connect MinIO
        run: |
          docker network create sermons-net || true
          docker network connect sermons-net minio || true || echo "minio already connected or named differently (OK)"

      - name: Create deploy override (network + loopback bind)
        run: |
          cat > docker-compose.override.deploy.yml << 'EOL'
          services:
            sermon-uploader:
              networks:
                - sermons-net
              environment:
                - MINIO_ENDPOINT=minio:9000
              ports:
                - "127.0.0.1:${PORT:-8000}:8000"
          networks:
            sermons-net:
              external: true
          EOL

      - name: Write .env for sermons app
        run: |
          cat > .env << 'EOL'
          MINIO_ENDPOINT=minio:9000
          MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}
          MINIO_SECURE=${{ secrets.MINIO_SECURE }}
          MINIO_BUCKET=${{ secrets.MINIO_BUCKET }}
          DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
          WAV_SUFFIX=_raw
          AAC_SUFFIX=_streamable
          BATCH_THRESHOLD=2
          PORT=${{ secrets.PORT || 8000 }}
          EOL
          chmod 600 .env

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull and start sermons (no minio deps)
        run: |
          docker compose -f docker-compose.prod.yml -f docker-compose.override.deploy.yml pull sermon-uploader
          docker compose -f docker-compose.prod.yml -f docker-compose.override.deploy.yml up -d --no-deps sermon-uploader

      - name: Local health check (retry)
        run: |
          for i in {1..12}; do
            if curl -sf http://localhost:8000/api/health >/dev/null; then
              echo "Local health OK"
              exit 0
            fi
            echo "Waiting for app... attempt $i"
            sleep 5
          done
          echo "App did not become healthy in time"
          exit 1

      - name: Public health check (retry)
        run: |
          for i in {1..12}; do
            if curl -sf https://sermons.wpgc.church/api/health >/dev/null; then
              echo "Public health OK"
              exit 0
            fi
            echo "Waiting for public URL... attempt $i"
            sleep 5
          done
          echo "Public health failed"
          exit 1

      - name: Summary
        run: |
          echo "## Deployment Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "- Target: Pi self-hosted runner" >> "$GITHUB_STEP_SUMMARY"
          echo "- MinIO: minio:9000 on sermons-net" >> "$GITHUB_STEP_SUMMARY"
          echo "- Public URL: https://sermons.wpgc.church" >> "$GITHUB_STEP_SUMMARY"

