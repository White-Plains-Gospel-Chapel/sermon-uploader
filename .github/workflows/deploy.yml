name: Deploy to Raspberry Pi

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Pi
    runs-on: self-hosted
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 0
      
      - name: Pull latest and deploy
        run: |
          echo "🚀 Deploying commit: $(git rev-parse --short HEAD)"
          
          # Ensure we have latest code
          git pull origin master || git pull origin main
          
          # Create .env file with secrets (strip http:// from MINIO_ENDPOINT if present)
          MINIO_EP="${{ secrets.MINIO_ENDPOINT }}"
          # Remove http:// or https:// prefix if present
          MINIO_EP="${MINIO_EP#http://}"
          MINIO_EP="${MINIO_EP#https://}"
          # Use localhost:9000 if not set
          MINIO_EP="${MINIO_EP:-localhost:9000}"
          
          cat > .env << EOL
          MINIO_ENDPOINT=$MINIO_EP
          MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}
          MINIO_SECURE=false
          MINIO_BUCKET=${{ secrets.MINIO_BUCKET }}
          DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
          WAV_SUFFIX=${{ secrets.WAV_SUFFIX }}
          AAC_SUFFIX=${{ secrets.AAC_SUFFIX }}
          BATCH_THRESHOLD=${{ secrets.BATCH_THRESHOLD }}
          PORT=${{ secrets.PORT }}
          EOL
          
          # Build Docker image locally
          echo "🏗️ Building Docker image..."
          docker build -t sermon-uploader:latest .
          
          # Stop old container and start new one
          echo "🔄 Restarting container..."
          docker compose -f docker-compose.single.yml down || true
          docker compose -f docker-compose.single.yml up -d
          
          # Wait for service to start
          sleep 10
          
          # Health check
          echo "🏥 Checking health..."
          for i in {1..5}; do
            if curl -f http://localhost:8000/api/health >/dev/null 2>&1; then
              echo "✅ Deployment successful!"
              break
            elif [ $i -eq 5 ]; then
              echo "❌ Health check failed"
              docker compose -f docker-compose.single.yml logs --tail=50
              exit 1
            else
              echo "⏳ Retry $i/5..."
              sleep 5
            fi
          done
          
          # Clean up old images
          docker image prune -af --filter="until=24h" || true
          
          echo "🎉 Deployment complete!"
          docker ps --format "table {{.Names}}\t{{.Status}}\t{{.CreatedAt}}"