name: Deploy to Production

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend-react/package-lock.json
    
    - name: Test Backend
      run: |
        cd backend
        go mod download
        go test -v ./...
    
    - name: Build Backend
      run: |
        cd backend
        go build -o sermon-uploader-test .
    
    - name: Test Frontend
      run: |
        cd frontend-react
        npm ci
        npm run build

  deploy:
    needs: test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Build Backend
      run: |
        cd backend
        go mod download
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o sermon-uploader .
    
    - name: Build Frontend
      run: |
        cd frontend-react
        npm ci
        npm run build
    
    - name: Deploy Backend
      run: |
        sudo systemctl stop sermon-uploader || true
        sudo cp backend/sermon-uploader /opt/sermon-uploader/
        sudo chown gaius:gaius /opt/sermon-uploader/sermon-uploader
        sudo chmod +x /opt/sermon-uploader/sermon-uploader
        sudo systemctl start sermon-uploader
        sudo systemctl enable sermon-uploader
    
    - name: Deploy Frontend
      run: |
        sudo rm -rf /opt/admin-dashboard/*
        sudo cp -r frontend-react/.next /opt/admin-dashboard/
        sudo cp -r frontend-react/public /opt/admin-dashboard/ 2>/dev/null || true
        sudo cp frontend-react/package.json /opt/admin-dashboard/
        sudo cp frontend-react/next.config.js /opt/admin-dashboard/
        sudo chown -R www-data:www-data /opt/admin-dashboard
        
        # Install/update dependencies
        cd /opt/admin-dashboard
        sudo -u www-data npm ci --production
        
        # Restart frontend service
        sudo pkill -f "next start" || true
        sleep 2
        sudo -u www-data nohup npm start > /dev/null 2>&1 &
    
    - name: Reload Nginx
      run: sudo systemctl reload nginx
    
    - name: Health Check
      run: |
        sleep 10
        curl -f http://localhost:8000/api/health || exit 1
        curl -f http://localhost:3000 || exit 1
        echo "‚úÖ Deployment successful!"
    
    - name: Discord Notification
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          curl -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "embeds": [{
                "title": "üöÄ Deployment Successful",
                "description": "WPGC Admin Platform deployed to production",
                "color": 3066993,
                "fields": [
                  {"name": "Branch", "value": "${{ github.ref_name }}", "inline": true},
                  {"name": "Commit", "value": "`${{ github.sha }}`", "inline": true},
                  {"name": "Admin URL", "value": "https://admin.wpgc.church", "inline": false},
                  {"name": "API URL", "value": "https://api.wpgc.church", "inline": false}
                ],
                "timestamp": "'$(date -Iseconds)'"
              }]
            }'
        else
          curl -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "embeds": [{
                "title": "‚ùå Deployment Failed",
                "description": "WPGC Admin Platform deployment failed",
                "color": 15158332,
                "fields": [
                  {"name": "Branch", "value": "${{ github.ref_name }}", "inline": true},
                  {"name": "Commit", "value": "`${{ github.sha }}`", "inline": true}
                ],
                "timestamp": "'$(date -Iseconds)'"
              }]
            }'
        fi