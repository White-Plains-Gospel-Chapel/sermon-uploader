name: Go Code Quality & Security Checks

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**/*.go'
      - 'backend/go.mod'
      - 'backend/go.sum'
      - 'backend/.golangci.yml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**/*.go'
      - 'backend/go.mod'
      - 'backend/go.sum'
      - 'backend/.golangci.yml'

jobs:
  golangci:
    name: Go Linting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache-dependency-path: backend/go.sum

    - name: Download dependencies
      run: |
        go mod download
        go mod verify

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        working-directory: backend
        args: --config .golangci.yml --verbose --timeout=5m

    - name: Run go vet
      run: go vet ./...

    - name: Check go fmt
      run: |
        if [ -n "$(gofmt -l .)" ]; then
          echo "Go code is not formatted:"
          gofmt -l .
          exit 1
        fi

    - name: Quick test verification
      run: |
        echo "ðŸ§ª Running quick test verification (coverage handled in main-ci.yml)..."
        go test -timeout=30s ./...

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache-dependency-path: backend/go.sum

    - name: Install gosec
      run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

    - name: Run gosec security scanner
      run: gosec -fmt sarif -out gosec.sarif -severity medium ./...

    - name: Upload SARIF file
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: backend/gosec.sarif

  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache-dependency-path: backend/go.sum

    - name: Install Nancy
      run: go install github.com/sonatypecommunity/nancy@latest

    - name: Run dependency vulnerability check
      run: |
        go list -json -deps ./... | nancy sleuth || true

    - name: Run Go vulnerability check
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

  benchmarks:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache-dependency-path: backend/go.sum

    - name: Download dependencies
      run: |
        go mod download
        go mod verify

    - name: Run benchmarks
      run: |
        echo "âš¡ Running performance benchmarks..."
        go test -bench=. -benchmem ./... | tee benchmark.txt
        
        echo "ðŸ“Š Benchmark results saved for performance tracking."