# golangci-lint configuration for enterprise Go 1.23 development
# Comprehensive linting rules for high-quality, secure, and performant code
run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  go: '1.23'

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters-settings:
  # Error handling and control flow
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - (*os.File).Close
      - (io.Closer).Close
      - (*bytes.Buffer).Write
      - (*bytes.Buffer).WriteString

  errorlint:
    errorf: true
    asserts: true
    comparison: true

  # Security linters
  gosec:
    includes:
      - G101 # Look for hardcoded credentials
      - G102 # Bind to all interfaces
      - G103 # Audit the use of unsafe block
      - G104 # Audit errors not checked
      - G106 # Audit the use of ssh.InsecureIgnoreHostKey
      - G107 # Url provided to HTTP request as taint input
      - G108 # Profiling endpoint automatically exposed on /debug/pprof
      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32
      - G110 # Potential DoS vulnerability via decompression bomb
      - G201 # SQL query construction using format string
      - G202 # SQL query construction using string concatenation
      - G203 # Use of unescaped data in HTML templates
      - G204 # Audit use of command execution
      - G301 # Poor file permissions used when creating a directory
      - G302 # Poor file permissions used with chmod
      - G303 # Creating tempfile using a predictable path
      - G304 # File path provided as taint input
      - G305 # File traversal when extracting zip archive
      - G306 # Poor file permissions used when writing to a file
      - G307 # Deferring a method which returns an error
      - G401 # Detect the usage of DES, RC4, MD5 or SHA1
      - G402 # Look for bad TLS connection settings
      - G403 # Ensure minimum RSA key length of 2048 bits
      - G404 # Insecure random number source (rand)
      - G501 # Import blocklist: crypto/md5
      - G502 # Import blocklist: crypto/des
      - G503 # Import blocklist: crypto/rc4
      - G504 # Import blocklist: net/http/cgi
      - G505 # Import blocklist: crypto/sha1
      - G601 # Implicit memory aliasing of items from a range statement
    config:
      G306: "0644"  # Allow standard file permissions

  # Performance and optimization linters
  prealloc:
    simple: true
    range-loops: true
    for-loops: false

  # Code complexity and maintainability
  gocyclo:
    min-complexity: 15

  cyclop:
    max-complexity: 15
    package-average: 10.0
    skip-tests: false

  gocognit:
    min-complexity: 20

  funlen:
    lines: 80
    statements: 40

  nestif:
    min-complexity: 5

  # Code style and formatting
  gofmt:
    simplify: true

  gofumpt:
    extra-rules: true

  goimports:
    local-prefixes: sermon-uploader

  # Unused code detection
  unused:
    field-writes-are-uses: true
    post-statements-are-reads: true
    exported-fields-are-used: true
    parameters-are-used: true
    local-variables-are-used: true
    generated-is-used: true

  # Type checking and interfaces
  govet:
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
    enable:
      - assign
      - atomic
      - atomicalign
      - bools
      - buildtag
      - cgocall
      - composites
      - copylocks
      - deepequalerrors
      - errorsas
      - fieldalignment
      - findcall
      - framepointer
      - httpresponse
      - ifaceassert
      - loopclosure
      - lostcancel
      - nilfunc
      - nilness
      - printf
      - reflectvaluecompare
      - shadow
      - shift
      - sigchanyzer
      - sortslice
      - stdmethods
      - stringintconv
      - structtag
      - testinggoroutine
      - tests
      - unmarshal
      - unreachable
      - unsafeptr
      - unusedresult

  # Naming conventions
  stylecheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    dot-import-whitelist:
      - fmt
    initialisms: ["ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS", "SIP", "RTP", "AMQP", "DB", "TS"]
    http-status-code-whitelist: ["200", "400", "404", "500"]

  revive:
    rules:
      - name: atomic
      - name: blank-imports
      - name: bool-literal-in-expr
      - name: call-to-gc
      - name: confusing-naming
      - name: confusing-results
      - name: constant-logical-expr
      - name: context-as-argument
      - name: context-keys-type
      - name: deep-exit
      - name: defer
      - name: dot-imports
      - name: duplicated-imports
      - name: early-return
      - name: empty-block
      - name: empty-lines
      - name: error-naming
      - name: error-return
      - name: error-strings
      - name: errorf
      - name: exported
      - name: flag-parameter
      - name: get-return
      - name: identical-branches
      - name: if-return
      - name: import-shadowing
      - name: increment-decrement
      - name: indent-error-flow
      - name: modifies-parameter
      - name: modifies-value-receiver
      - name: package-comments
      - name: range
      - name: range-val-address
      - name: range-val-in-closure
      - name: receiver-naming
      - name: redefines-builtin-id
      - name: string-of-int
      - name: struct-tag
      - name: superfluous-else
      - name: time-naming
      - name: unconditional-recursion
      - name: unexported-naming
      - name: unexported-return
      - name: unhandled-error
      - name: unnecessary-stmt
      - name: unreachable-code
      - name: unused-parameter
      - name: unused-receiver
      - name: use-any
      - name: useless-break
      - name: var-declaration
      - name: var-naming
      - name: waitgroup-by-value

  # Line length and formatting
  lll:
    line-length: 120
    tab-width: 4

  # Import organization
  gci:
    sections:
      - standard
      - default
      - prefix(sermon-uploader)
    skip-generated: true
    custom-order: true

  # Misspelling detection
  misspell:
    locale: US
    ignore-words:
      - "colour"
      - "flavour"

  # Test specific linters
  testpackage:
    skip-regexp: '(export|internal)_test\.go'

linters:
  disable-all: true
  enable:
    # Error handling
    - errcheck
    - errorlint
    
    # Security
    - gosec
    
    # Performance
    - prealloc
    - bodyclose
    - noctx
    
    # Bugs and correctness
    - govet
    - staticcheck
    - unused
    - ineffassign
    - typecheck
    - gocritic
    - rowserrcheck
    - sqlclosecheck
    - wastedassign
    - unconvert
    - unparam
    
    # Code complexity
    - gocyclo
    - cyclop
    - gocognit
    - funlen
    - nestif
    
    # Style and formatting
    - gofmt
    - gofumpt
    - goimports
    - stylecheck
    - revive
    - lll
    - gci
    - misspell
    - whitespace
    - wsl
    
    # Naming and conventions
    - predeclared
    - containedctx
    - contextcheck
    - decorder
    - dupl
    - durationcheck
    - copyloopvar
    - forbidigo
    - forcetypeassert
    - goconst
    - gomodguard
    - goprintffuncname
    - grouper
    - importas
    - makezero
    - nakedret
    - nilerr
    - nilnil
    - nlreturn
    - nolintlint
    - promlinter
    - reassign
    - tagliatelle
    - tenv
    - testpackage
    - thelper
    - tparallel
    - usestdlibvars

  # Enable only for Go 1.23+
  fast: false

issues:
  exclude-dirs:
    - vendor
    - third_party
    - .git
    - tmp
    - _output
  exclude-files:
    - ".*\\.pb\\.go$"     # Protocol buffer generated files
    - ".*_gen\\.go$"      # Generated files
    - ".*\\.gen\\.go$"    # Generated files
    - "mock_.*\\.go$"     # Mock files
    - ".*_mock\\.go$"     # Mock files
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - goconst
        - gocognit
        - scopelint
        - lll

    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # Exclude gosec for test files
    - path: _test\.go
      text: "G404:"  # Use of weak random number generator
      linters:
        - gosec

    # Allow main function complexity
    - path: main\.go
      text: "function `main` has cognitive complexity"
      linters:
        - gocognit

    # Allow init functions
    - text: "don't use `init` function"
      linters:
        - gochecknoinits

  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
      severity: info
    - linters:
        - gocritic
      severity: warning