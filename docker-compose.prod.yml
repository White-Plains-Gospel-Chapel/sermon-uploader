# Production Docker Compose - Secure Configuration
# Copy .env.example to .env and fill in your secrets

services:
  sermon-uploader:
    image: ghcr.io/white-plains-gospel-chapel/sermon-uploader:latest
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_SECURE=${MINIO_SECURE:-false}
      - MINIO_BUCKET=${MINIO_BUCKET:-sermons}
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - WAV_SUFFIX=${WAV_SUFFIX:-_raw}
      - AAC_SUFFIX=${AAC_SUFFIX:-_streamable}
      - BATCH_THRESHOLD=${BATCH_THRESHOLD:-2}
      - PORT=${PORT:-8000}
    volumes:
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - minio
    networks:
      - sermon-network

  # Separate MinIO service - persistent data
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sermon-network

  # Initialize MinIO bucket
  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY};
      /usr/bin/mc mb myminio/$${MINIO_BUCKET} --ignore-existing;
      /usr/bin/mc anonymous set public myminio/$${MINIO_BUCKET};
      echo 'MinIO bucket initialized successfully';
      "
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=${MINIO_BUCKET:-sermons}
    networks:
      - sermon-network

volumes:
  minio_data:
    driver: local

networks:
  sermon-network:
    driver: bridge